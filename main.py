# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\mainpage.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive
from savewindow import SaveWindow
from loadwindow import LoadWindow
import os
import shutil


class Window(QMainWindow):
    def __init__(self):
        super(Window, self).__init__()
        self.top = 200
        self.left = 200
        self.width = 600
        self.height = 350
        self.initUI()

    def initUI(self):
        self.setWindowTitle("密码管理助手")
        self.setGeometry(self.top, self.left, self.width, self.height)

        ### "保存"部分
        self.saveButton = QPushButton(self)
        self.saveButton.setGeometry(QtCore.QRect(90, 130, 200, 60))
        self.saveButton.setObjectName("saveButton")
        self.saveButton.setText("保存")
        self.saveButton.clicked.connect(self.save)

        ### “读取”部分
        self.loadButton = QPushButton(self)
        self.loadButton.setGeometry(QtCore.QRect(310, 130, 200, 60))
        self.loadButton.setObjectName("loadButton")
        self.loadButton.setText("读取")
        self.loadButton.clicked.connect(self.load)
        
        ### “同步”部分
        self.syncButton = QPushButton(self)
        self.syncButton.setGeometry(QtCore.QRect(90, 210, 200, 60))
        self.syncButton.setObjectName("syncButton")
        self.syncButton.setText("备份至云端")
        self.syncButton.clicked.connect(self.sync)
        
        ### "导出"
        self.exportButton = QPushButton(self)
        self.exportButton.setGeometry(QtCore.QRect(310, 210, 200, 60))
        self.exportButton.setObjectName("exportButton")
        self.exportButton.setText("导出")
        self.exportButton.clicked.connect(self.export)

        ### 
        self.label = QLabel(self)
        self.label.setGeometry(QRect(90, 50, 421, 71))
        font = QFont()
        font.setPointSize(20)
        self.label.setFont(font)
        self.label.setLayoutDirection(Qt.LeftToRight)
        self.label.setAlignment(Qt.AlignCenter)
        self.label.setObjectName("label")
        self.label.setText("欢迎使用密码管理小助手!")

    def save(self):
        self.savewindow = SaveWindow()
        self.savewindow.setGeometry(QRect(400, 400, 400, 200))
        self.savewindow.show()

    def load(self):
        """Open the dictionary"""
        self.loadwindow = LoadWindow()
        self.loadwindow.setGeometry(QRect(400, 400, 400, 200))
        self.loadwindow.show()
        
    def sync(self):
        if os.path.exists("database.pkl"):
            gauth = GoogleAuth()
            gauth.LocalWebserverAuth() # client_secrets.json need to be in the same directory as the script
            drive = GoogleDrive(gauth)
            # fileList = drive.ListFile({'q': "'1EbGpmPpt4FVNQIf8sZWcjB1UOnklVGVN' in parents and trashed=false"}).GetList()
            file = drive.CreateFile({'parents': [{'id': '1EbGpmPpt4FVNQIf8sZWcjB1UOnklVGVN'}]})
            file.SetContentFile('database.pkl')
            file.Upload()
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Information)
            msg.setText("Success")
            msg.setInformativeText('备份成功！')
            msg.setWindowTitle("备份成功")
            msg.exec_()
        else:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)
            msg.setText("Error")
            msg.setWindowTitle("Error")
            msg.exec_()
            
    def export(self):
        dialog = QFileDialog()
        foo_dir = dialog.getExistingDirectory(self, '选择导出目录')
        if os.path.exists('database.pkl'):
            shutil.copyfile('database.pkl', os.path.join(foo_dir, 'database.pkl'))
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Information)
            msg.setText("导出成功！")
            msg.setWindowTitle("导出成功")
            msg.exec_()
        else:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)
            msg.setText("您还没有保存任何密码")
            msg.setWindowTitle("Error")
            msg.exec_()


if __name__ == "__main__":
    app = QApplication(sys.argv)
    mainwindow = Window()
    mainwindow.show()
    sys.exit(app.exec_())
