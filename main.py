# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\mainpage.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
import pandas as pd
import pickle
import os.path


class SaveWindow(QDialog):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Registration")
        self.formGroupBox = QGroupBox("Registration Info")

        self.usernameLineEdit = QLineEdit()
        self.passwordLineEdit = QLineEdit()
        self.websiteLineEdit = QLineEdit()
        self.nameLineEdit = QLineEdit()

        self.createForm()
        self.buttonBox = QDialogButtonBox(QDialogButtonBox.Ok | QDialogButtonBox.Cancel)
        self.buttonBox.accepted.connect(self.getInfo)
        self.buttonBox.rejected.connect(self.reject)

        mainLayout = QVBoxLayout()

        mainLayout.addWidget(self.formGroupBox)
        mainLayout.addWidget(self.buttonBox)
        self.setLayout(mainLayout)

    def getInfo(self):
        self.close()

    def createForm(self):
        layout = QFormLayout()
        layout.addRow(QLabel("Username:"), self.usernameLineEdit)
        layout.addRow(QLabel("Password:"), self.passwordLineEdit)
        layout.addRow(QLabel("Website:"), self.websiteLineEdit)
        layout.addRow(QLabel("Give it a name:"), self.nameLineEdit)
        self.formGroupBox.setLayout(layout)

    def saveregistration(self):
        """Save a dictionary."""
        ## load the dictionary
        if os.path.exists("database.pkl"):
            with open("database.pkl", "rb") as f:
                datadict = pickle.load(f)
        else:
            datadict = {}

        newDict = {
            "username": self.usernameLineEdit.text(),
            "password": self.passwordLineEdit.text(),
            "website": self.websiteLineEdit.text(),
        }

        datadict[self.nameLineEdit] = newDict

        with open('database.pkl', 'wb') as f:
            pickle.dump(datadict, f, protocol=pickle.HIGHEST_PROTOCOL)


class Window(QMainWindow):
    def __init__(self):
        super(Window, self).__init__()
        self.top = 200
        self.left = 200
        self.width = 600
        self.height = 500
        self.initUI()

    def initUI(self):
        self.setWindowTitle("Password Manager")
        self.setGeometry(self.top, self.left, self.width, self.height)

        self.saveButton = QPushButton(self)
        self.saveButton.setGeometry(QtCore.QRect(90, 230, 200, 60))
        self.saveButton.setObjectName("saveButton")
        self.saveButton.setText("Save")
        self.saveButton.clicked.connect(self.save)

        self.loadButton = QPushButton(self)
        self.loadButton.setGeometry(QtCore.QRect(310, 230, 200, 60))
        self.loadButton.setObjectName("loadButton")
        self.loadButton.setText("Load")
        self.loadButton.clicked.connect(self.load)

        self.label = QLabel(self)
        self.label.setGeometry(QRect(90, 140, 421, 71))
        font = QFont()
        font.setPointSize(20)
        self.label.setFont(font)
        self.label.setLayoutDirection(Qt.LeftToRight)
        self.label.setAlignment(Qt.AlignCenter)
        self.label.setObjectName("label")
        self.label.setText("Welcome to Password Manager!")

    def save(self):
        self.savewindow = SaveWindow()
        self.savewindow.setGeometry(QRect(100, 100, 400, 200))
        self.savewindow.show()


    def load(self):
        """Open the dictionary"""
        if os.path.exists("database.pkl"):
            with open("database.pkl", "rb") as f:
                datadict = pickle.load(f)
                print(datadict)


if __name__ == "__main__":
    app = QApplication(sys.argv)
    mainwindow = Window()
    mainwindow.show()
    sys.exit(app.exec_())
